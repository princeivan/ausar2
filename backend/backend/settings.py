"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
from dotenv import load_dotenv 
import os
from corsheaders.defaults import default_headers 
import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration
from decouple import config
import dj_database_url
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = [
    '139.162.175.68',
    'ausacreative.co.ke',
    'www.ausacreative.co.ke',
    '127.0.0.1',
    'localhost',
    'ausar2.onrender.com',
    'ausar2-git-main-ivan-ronos-projects.vercel.app',
    'ausar2-no08urpln-ivan-ronos-projects.vercel.app',
    ]

AUTH_USER_MODEL = 'api.User'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'api.authentication.CustomJWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    #Pagination
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 10
}
SIMPLE_JWT = {
    'AUTH_HEADER_TYPES': ('Bearer',),
    "AUTH_COOKIE": "access",
    "AUTH_COOKIE_REFRESH": "refresh",
    "AUTH_COOKIE_HTTP_ONLY": True,
    "AUTH_COOKIE_SECURE":True,
    "AUTH_COOKIE_SAMESITE": "None",
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=30),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
 }




INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    'api.apps.ApiConfig',
    'rest_framework',
    'corsheaders',

]

MIDDLEWARE = [
    
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    
    
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#          'ENGINE': 'django.db.backends.postgresql',
#         'NAME': config('DB_NAME'),
#          'USER':config('DB_USER'),
#          'PASSWORD':config('DB_PASSWORD'),
#          'HOST':config('DB_HOST'),
#          'PORT':config('DB_PORT'),
#     }
# }

DATABASES = {
    'default': dj_database_url.config(
        default='postgresql://postgres1:zvodU9cEKeCZGvPl3yom2nGgMTDz3Dld@dpg-d289e3ogjchc73939img-a.oregon-postgres.render.com/ausar_creative'
    )
}



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Create logs directory if it doesn't exist
LOGS_DIR = os.path.join(BASE_DIR, 'logs')
if not os.path.exists(LOGS_DIR):
    os.makedirs(LOGS_DIR)

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOWED_ORIGINS=[
    'http://139.162.175.68',
    'https://ausacreative.co.ke',
    'http://localhost:5173',
    'https://ausar2-git-main-ivan-ronos-projects.vercel.app',
    'https://ausar2-no08urpln-ivan-ronos-projects.vercel.app',
    "https://www.ausacreative.co.ke/"
]
CORS_ALLOW_CREDENTIALS = True
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:5173",
    "https://ausacreative.co.ke",
    "https://ausar2-git-main-ivan-ronos-projects.vercel.app",
    "https://ausar2-no08urpln-ivan-ronos-projects.vercel.app",
    "https://www.ausacreative.co.ke/"
]
SESSION_COOKIE_SAMESITE = "None"
CSRF_COOKIE_SAMESITE = "None"
CSRF_COOKIE_SECURE = True  # True in production
SESSION_COOKIE_SECURE = True  # True in production
# CORS_ALLOW_HEADERS = list(default_headers) + [
#     'authorization',
# ]

# Update Sentry configuration
sentry_sdk.init(
    dsn=os.getenv('SENTRY_DSN', ''),
    integrations=[DjangoIntegration()],
    traces_sample_rate=float(os.getenv('SENTRY_TRACES_SAMPLE_RATE', '0.1')),
    send_default_pii=True,
    environment=os.getenv('ENVIRONMENT', 'production'),
)

# SECURE_SSL_REDIRECT = True
# SESSION_COOKIE_SECURE = True
# CSRF_COOKIE_SECURE = True
# SECURE_HSTS_SECONDS = 31536000
# SECURE_HSTS_INCLUDE_SUBDOMAINS = True
# SECURE_HSTS_PRELOAD = True
# SECURE_BROWSER_XSS_FILTER = True
# SECURE_CONTENT_TYPE_NOSNIFF = True
# X_FRAME_OPTIONS = "DENY"

MPESA_CONFIG = {
    
'MPESA_CONSUMER_KEY' :config("MPESA_CONSUMER_KEY"),
'MPESA_CONSUMER_SECRET' :config("MPESA_CONSUMER_SECRET"),
'MPESA_SHORTCODE' : config("MPESA_SHORTCODE"),
'MPESA_PASSKEY' :config("MPESA_PASSKEY"),
'MPESA_CALLBACK_URL' : config("MPESA_CALLBACK_URL"),
'SANDBOX_URL': 'https://sandbox.safaricom.co.ke',
'PRODUCTION_URL': 'https://api.safaricom.co.ke',
'ENVIRONMENT': 'production',
}
STRIPE_CONFIG = {
    'PUBLISHABLE_KEY': config('PUBLISHABLE_KEY'),
    'STRIPE_SECRET_KEY': config('STRIPE_SECRET_KEY'),
    'WEBHOOK_SECRET': config('WEBHOOK_SECRET'),
}

PAYMENT_SETTINGS = {
    'MIN_AMOUNT': 1.00,
    'MAX_AMOUNT': 100000.00,
    'DEFAULT_CURRENCY': 'KES',
    'SUPPORTED_CURRENCIES': ['KES', 'USD'],
}


# Logging Configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': os.path.join(LOGS_DIR, 'django.log'),
            'formatter': 'verbose',
        },
        'console': {
            'level': 'ERROR',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],
            'level': 'ERROR',
            'propagate': True,
        },
    },
}
